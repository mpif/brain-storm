<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spring.springmvc.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.spring.springmvc.model.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="paid" property="paid" jdbcType="TINYINT" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="unique_no" property="uniqueNo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, paid, telephone, unique_no, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="queryBySelective" resultMap="BaseResultMap" parameterType="User" >
    select
        <include refid="Base_Column_List" />
    from user
    where
      1=1
    <if test="id != null" >
      AND id = #{id,jdbcType=BIGINT}
    </if>
    <if test="telephone != null" >
      AND telephone = #{telephone,jdbcType=VARCHAR}
    </if>
    <if test="uniqueNo != null" >
      AND unique_no = #{uniqueNo,jdbcType=VARCHAR}
    </if>

  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.spring.springmvc.model.User" >
    insert into user (id, username, password, 
      paid, telephone, unique_no, create_time)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{paid,jdbcType=TINYINT}, #{telephone,jdbcType=VARCHAR}, #{uniqueNo,jdbcType=VARCHAR},
      #{createTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.spring.springmvc.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="paid != null" >
        paid,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="uniqueNo != null" >
        unique_no,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="paid != null" >
        #{paid,jdbcType=TINYINT},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="uniqueNo != null" >
        #{uniqueNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.springmvc.model.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="paid != null" >
        paid = #{paid,jdbcType=TINYINT},
      </if>
      update_time = now()
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.springmvc.model.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      paid = #{paid,jdbcType=TINYINT},
      update_time = now()
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>